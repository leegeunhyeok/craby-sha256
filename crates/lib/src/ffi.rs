// Auto generated by Craby. DO NOT EDIT.
#[rustfmt::skip]
use craby::prelude::*;

use crate::craby_sha_256_impl::*;
use crate::generated::*;

use bridging::*;

#[cxx::bridge(namespace = "craby::crabysha256::bridging")]
pub mod bridging {




    extern "Rust" {
        type CrabySha256;

        #[cxx_name = "createCrabySha256"]
        fn create_craby_sha_256(id: usize, data_path: &str) -> Box<CrabySha256>;

        #[cxx_name = "digest"]
        fn craby_sha_256_digest(it_: &mut CrabySha256, data: &str) -> Result<String>;
    }

}

fn create_craby_sha_256(id: usize, data_path: &str) -> Box<CrabySha256> {
    let ctx = Context::new(id, data_path);
    Box::new(CrabySha256::new(ctx))
}

fn craby_sha_256_digest(it_: &mut CrabySha256, data: &str) -> Result<String, anyhow::Error> {
    craby::catch_panic!({
        let ret = it_.digest(data);
        ret
    })
}
